{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "Lookup_table_names",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select t.name as table_name, s.name schema_name\nfrom sys.tables t join sys.schemas s\non t.schema_id = s.schema_id\nwhere type = 'U'\nand s.name = '@{pipeline().parameters.sname}';",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_sqlData",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "dbo",
							"TableName": "customer"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup_table_names",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup_table_names').output.value",
						"type": "Expression"
					},
					"batchCount": 10,
					"activities": [
						{
							"name": "copy_to_silver_as_parquet",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.00:30:00",
								"retry": 2,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_sqlData",
									"type": "DatasetReference",
									"parameters": {
										"SchemaName": {
											"value": "@item().schema_name",
											"type": "Expression"
										},
										"TableName": {
											"value": "@item().table_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_Parquet_staging1",
									"type": "DatasetReference",
									"parameters": {
										"Directory": "na",
										"FileName": {
											"value": "@concat(\n    item().table_name,'.parquet'\n)",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"sname": {
				"type": "string",
				"defaultValue": "dbo"
			}
		},
		"variables": {
			"tablename": {
				"type": "String"
			}
		},
		"annotations": []
	}
}